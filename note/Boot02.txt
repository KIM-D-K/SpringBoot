<gradle>
- 매우 유연한 범용 빌드툴
- Maven과 같은 구조화된 build프레임 워크
- 의존성 관리의 다양한 방법을 제공
- build Script를 xml이 아닌 Groovy기반의 DSL(Domain Sqecific Language)을 사용
- 기존 Build를 구성하기 위한 풍부한 도메인 모델 제공\
- Gadle 설치없이 Grable Wrapper를 이용하여 빌드를 지원

<Build LifeCycle>
- 초기화(intialization) : 빌드 대상 프로젝트를 결정하고 각각에 대한 project객체를
  생성
	1) setting.gradle 파일에서 프로젝트 구성
- 구성(Configuration) : 빌드 대상이 되는 모든 프로젝트의 빌드 스크립트를 실행
- 실행(Execution) : 구성 단계에서 생성하고 설정된 프로젝트의 태스크 중에 실행
  대상 결정

<템플릿 엔진>
- 지정된 템플릿 양식과 데이터가 합쳐져 HTML문서를 출력하는 소프트웨어이다.
- 웹사이트 화면을 어떤 형태로 만들지 도와주는 양식웹
- 템플릿 엔진은 VIEW code(HTML)와 data Logic code(DB Connection)를 분리해
  주는 기능을 한다.
- 템플릿 엔진은 서버 사이드 템플릿 엔진과 클라이언트 사이드 템플릿 엔진으로
  나눌 수 있다.

<서버 사이드 템플릿 엔진>
- 서버에서 DB혹은 API에서 가져온 데이터를 미리 정의된 템플릿에 넣어서 HTML을
  그려 클라이언트에 전달해주는 역할
- HTML코드에서 고정적으로 사용되는 부분을 템플릿으로 만들어두고 동적으로
  생성되는 부분만 템플릿 특정 장소에 끼워 넣는 방식으로 동작할 수 있도록 해준다.

<동작과정>
1. 클라이언트의 요청을 받는다.
2. 필요한 데이터를 DB나 API에서 가져온다.
3. 미리 정의된 Template에 해당 데이터를 배치한다.
4. 서버에서 HTML(데이터가 반영된)을 그린다.
5. 해당 HTML을 클라이언트에 전달한다.

<SSR>
- 서버에서 최종 HTML 결과를 만들어 브라우저에 전달하기 때문에 주로
  화면이동이 많은 곳에서 사용된다. (JSP, Thymeleaf, Freemaker가 있다.)

<클라이언트 사이드 템플릿 엔진>
- HTML 형태로 코드를 작성할 수 있으며 DOM을 그리게 해주는 역할
- 데이터를 받아서 DOM 객체에 동적으로 그려주는 프로세스를 담당하고 있다.

<동작과정>
1. 클라이언트에서 공통적인 프레임을 미리 Template으로 만든다.
2. 서버에서 필요한 데이터를 제공받는다.
3. URL이 바뀌어도 HTML을 다시 내려받지 않고 클라이언트에서 알아서 그리기
   때문에 주로 단일 화면에서 화면이 변경되는 경우에 사용된다.
- Mustache, Squirrelly

<타임리프(Thymeleaf)>
- 자바 웹개발에 이상적인'모던'서버 사이드 자바 템플릿 엔진
- 타임리프는 컨트롤러가 전달하는 데이터를 이용해 동적으로 화면을 만들어주는
  역할을 하는 view 템플릿 엔진이다.
- 스프링부트에서는 공식적으로 view영역에서 jsp의 사용을 권장하지 않는다.

<Thymeleaf가 제공해주는 템플릿>
- HTML
- XML
- TEXT
- JavaScript
- CSS

<타임리프의 특징>
- 서버상에서 동작하지 않아도 HTML파일의 내용을 바로 확인할 수 있다.
- JSP의 경우 서버를 구동하지 않고 파일을 열게되면 JSP코드와 HTML코드가 
  섞여있어 정상적으로 확인이 불가능하다.
- 타임리프는 화면 구성을 서버 가동없이 쉽게 파악할 수 있어 개발에 수정할 때
  마다 서버 재가동이 필요없어지기 때문에 개발에 용이하다.
- 코드를 변경하지 않기 때문에 디자인 팀과 개발 팀간의 협업이 편해진다.
- JSP와 달리 Servlet코드로 변경되지 않기 때문에 오로지 view에 집중할 수 있다.
- 확장성이 뛰어나며, 커스터마이징이 쉽다.

<th:*>
- 타임리프 전용 속성이며 브라우저는 이를 무시한다.

<xmlns:th="">
- Thymeleaf의 th속성을 사용하기 위해 선언된 네임스팬이다.